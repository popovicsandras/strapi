"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5800],{6213:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(3117),l=(n(7294),n(3905));const r={title:"Backend Design",description:"Content Releases backend",tags:["content-releases","tech design"]},s=void 0,i={unversionedId:"docs/core/content-releases/backend",id:"docs/core/content-releases/backend",title:"Backend Design",description:"Content Releases backend",source:"@site/docs/docs/01-core/content-releases/01-backend.md",sourceDirName:"docs/01-core/content-releases",slug:"/docs/core/content-releases/backend",permalink:"/docs/core/content-releases/backend",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/content-releases/01-backend.md",tags:[{label:"content-releases",permalink:"/tags/content-releases"},{label:"tech design",permalink:"/tags/tech-design"}],version:"current",sidebarPosition:1,frontMatter:{title:"Backend Design",description:"Content Releases backend",tags:["content-releases","tech design"]},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/core/content-releases/intro"},next:{title:"Introduction",permalink:"/docs/core/content-releases/frontend/intro"}},o={},c=[{value:"Content-types",id:"content-types",level:2},{value:"Release",id:"release",level:3},{value:"Release Action",id:"release-action",level:3},{value:"Routes",id:"routes",level:2},{value:"Release",id:"release-1",level:3},{value:"Release Action",id:"release-action-1",level:3},{value:"Controllers",id:"controllers",level:2},{value:"Release",id:"release-2",level:3},{value:"Release Action",id:"release-action-2",level:3},{value:"Services",id:"services",level:2},{value:"Release",id:"release-3",level:3},{value:"Release Validation",id:"release-validation",level:3},{value:"Scheduling",id:"scheduling",level:3},{value:"Release status update triggers:",id:"release-status-update-triggers",level:3},{value:"Creating a release:",id:"creating-a-release",level:4},{value:"Adding an entry to a release:",id:"adding-an-entry-to-a-release",level:4},{value:"Removing an entry from a release:",id:"removing-an-entry-from-a-release",level:4},{value:"Updating a release:",id:"updating-a-release",level:4},{value:"Publishing a release:",id:"publishing-a-release",level:4},{value:"Listening to events on entries:",id:"listening-to-events-on-entries",level:4},{value:"Migrations",id:"migrations",level:2},{value:"<code>deleteActionsOnDisableDraftAndPublish</code>",id:"deleteactionsondisabledraftandpublish",level:3},{value:"<code>deleteActionsOnDeleteContentType</code>",id:"deleteactionsondeletecontenttype",level:3},{value:"Subscribing to Lifecycles Events",id:"subscribing-to-lifecycles-events",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"All backend code can be found in:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," packages/core/content-releases/server\n")),(0,l.kt)("h2",{id:"content-types"},"Content-types"),(0,l.kt)("p",null,"The content-releases plugin creates two hidden content-types."),(0,l.kt)("h3",{id:"release"},"Release"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Release")," content type stores all the information about a release and its associated Release Actions. It is saved in the database as ",(0,l.kt)("inlineCode",{parentName:"p"},"strapi_releases"),". The schema can be found in:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/content-types/release/schema.ts\n")),(0,l.kt)("h3",{id:"release-action"},"Release Action"),(0,l.kt)("p",null,"Th ",(0,l.kt)("inlineCode",{parentName:"p"},"Release Action")," content type is associated with any entry from any content-type that has draft and publish enabled. It is responsible for storing the action to perform for an associated entry. It is saved in the database as ",(0,l.kt)("inlineCode",{parentName:"p"},"strapi_release_actions"),". The schema can be found in:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/content-types/release-action/schema.ts\n")),(0,l.kt)("h2",{id:"routes"},"Routes"),(0,l.kt)("p",null,"Release and Release Action routes are only accessible on the Admin API."),(0,l.kt)("h3",{id:"release-1"},"Release"),(0,l.kt)("p",null,"Release routes can be found in:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/routes/release.ts\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Get all releases"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"GET")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/")),(0,l.kt)("li",{parentName:"ul"},"params:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  page: number;\n  pageSize: number;\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Get all releases with/without an entry"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"GET")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/")),(0,l.kt)("li",{parentName:"ul"},"params:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  contentTypeUid: string;\n  entryId: number;\n  hasEntryAttached?: boolean;\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Get a single release")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"GET")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:id"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Create a release"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"POST")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/")),(0,l.kt)("li",{parentName:"ul"},"body:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  name: string;\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Update a release"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"PUT")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:id")),(0,l.kt)("li",{parentName:"ul"},"body:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  name: string;\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Delete a release"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"DELETE")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:id"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Publish a release"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"POST")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:id/publish"))),(0,l.kt)("h3",{id:"release-action-1"},"Release Action"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Create a release action")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"method: ",(0,l.kt)("inlineCode",{parentName:"p"},"POST"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"p"},"/content-releases/:releaseId/actions"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"body:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  entry: {\n    id: number,\n    contentType: string,\n    locale: string,\n  }\n  type: 'publish' | 'unpublish'\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Get release actions from a release")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"GET")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:releaseId/actions")),(0,l.kt)("li",{parentName:"ul"},"body:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  page: number;\n  pageSize: number;\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Update a release action")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"PUT")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:releaseId/actions/:actionId")),(0,l.kt)("li",{parentName:"ul"},"body:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  type: 'publish' | 'unpublish';\n}\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Delete a release action")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method: ",(0,l.kt)("inlineCode",{parentName:"li"},"DELETE")),(0,l.kt)("li",{parentName:"ul"},"endpoint: ",(0,l.kt)("inlineCode",{parentName:"li"},"/content-releases/:releaseId/actions/:actionId"))),(0,l.kt)("h2",{id:"controllers"},"Controllers"),(0,l.kt)("h3",{id:"release-2"},"Release"),(0,l.kt)("p",null,"Handles requests to interact with the Release content type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/controllers/release.ts\n")),(0,l.kt)("h3",{id:"release-action-2"},"Release Action"),(0,l.kt)("p",null,"Handles requests to interact with the Release Action content type"),(0,l.kt)("h2",{id:"services"},"Services"),(0,l.kt)("h3",{id:"release-3"},"Release"),(0,l.kt)("p",null,"Interacts with the database for Release and Release Action CRUD operations"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/services/release.ts\n")),(0,l.kt)("h3",{id:"release-validation"},"Release Validation"),(0,l.kt)("p",null,"Exposes validation functions to run before performing operations on a Release"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/services/validation.ts\n")),(0,l.kt)("h3",{id:"scheduling"},"Scheduling"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Scheduling is still under development, but you can try it ",(0,l.kt)("strong",{parentName:"p"},"at your own risk")," with future flags. The future flag to enable scheduling is ",(0,l.kt)("inlineCode",{parentName:"p"},"contentReleasesScheduling"),".")),(0,l.kt)("p",null,"Exposes methods to schedule release date for releases."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"packages/core/content-releases/server/src/services/scheduling.ts\n")),(0,l.kt)("h3",{id:"release-status-update-triggers"},"Release status update triggers:"),(0,l.kt)("p",null,"Considering that retrieving the status of all entries in a release is a heavy operation, we don't fetch it every time a user wants to access a release. Instead, we store the status in a field within the Release Content Type, and we only update it when an action that changes the status is triggered. These actions include:"),(0,l.kt)("h4",{id:"creating-a-release"},"Creating a release:"),(0,l.kt)("p",null,'When creating a release, its status is automatically set to "Empty" as there are no entries initially.'),(0,l.kt)("h4",{id:"adding-an-entry-to-a-release"},"Adding an entry to a release:"),(0,l.kt)("p",null,'Upon adding an entry to a release, its status is recalculated to either "Ready" or "Blocked" based on the validity of the added entry.'),(0,l.kt)("h4",{id:"removing-an-entry-from-a-release"},"Removing an entry from a release:"),(0,l.kt)("p",null,'After removing an entry from a release, the status is recalculated to determine if the release is now "Ready", "Blocked", or "Empty".'),(0,l.kt)("h4",{id:"updating-a-release"},"Updating a release:"),(0,l.kt)("p",null,"Whenever a release is updated, its status is recalculated based on the validity of the actions performed during the update."),(0,l.kt)("h4",{id:"publishing-a-release"},"Publishing a release:"),(0,l.kt)("p",null,'During the publishing process, if successful, the status changes to "Done"; otherwise, it changes to "Failed".'),(0,l.kt)("h4",{id:"listening-to-events-on-entries"},"Listening to events on entries:"),(0,l.kt)("p",null,"When an entry is updated or deleted, the status of all releases containing that entry is recalculated to reflect any changes in validity."),(0,l.kt)("h2",{id:"migrations"},"Migrations"),(0,l.kt)("p",null,"We have two migrations that we run every time we sync the content types."),(0,l.kt)("h3",{id:"deleteactionsondisabledraftandpublish"},(0,l.kt)("inlineCode",{parentName:"h3"},"deleteActionsOnDisableDraftAndPublish")),(0,l.kt)("p",null,"When a user disables Draft and Publish in one Content Type we make sure to remove all the release actions related to entries of that content type to avoid errors."),(0,l.kt)("h3",{id:"deleteactionsondeletecontenttype"},(0,l.kt)("inlineCode",{parentName:"h3"},"deleteActionsOnDeleteContentType")),(0,l.kt)("p",null,"When a Content Type is deleted, delete all actions containing entries from that Content Type."),(0,l.kt)("h2",{id:"subscribing-to-lifecycles-events"},"Subscribing to Lifecycles Events"),(0,l.kt)("p",null,"When an entry is deleted delete all actions containing that entry."))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),k=l,m=u["".concat(o,".").concat(k)]||u[k]||d[k]||r;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:l,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);